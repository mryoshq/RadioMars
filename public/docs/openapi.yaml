openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/advertiser:
    get:
      summary: 'Display the specified advertiser.'
      operationId: displayTheSpecifiedAdvertiser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
    put:
      summary: 'Update the specified advertiser in storage.'
      operationId: updateTheSpecifiedAdvertiserInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: 'The domain of the advertiser.'
                  example: animi
                firm:
                  type: string
                  description: 'The firm of the advertiser.'
                  example: voluptatem
                name:
                  type: string
                  description: 'The name of the user.'
                  example: quibusdam
                email:
                  type: string
                  description: 'The email of the user.'
                  example: sherman.braun@example.com
                phone_number:
                  type: string
                  description: 'The phone number of the user.'
                  example: nostrum
                password:
                  type: string
                  description: 'The password of the user.'
                  example: 'Da];6bA7,w?cl>*'
  '/api/advertiser/{id}/ads':
    get:
      summary: 'Get the ads related to a specific advertiser.'
      operationId: getTheAdsRelatedToASpecificAdvertiser
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the advertiser.'
        example: vitae
        required: true
        schema:
          type: string
  /api/ads:
    get:
      summary: 'Display a listing of the ads.'
      operationId: displayAListingOfTheAds
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created ad in the database.'
      operationId: storeANewlyCreatedAdInTheDatabase
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text_content:
                  type: string
                  description: 'required_without:audio_content The text content of the ad.'
                  example: '"This is a sample text ad."'
                audio_content:
                  type: string
                  description: 'required_without:text_content The audio content of the ad.'
                  example: quibusdam
                pack_id:
                  type: integer
                  description: 'The ID of the pack associated with the ad.'
                  example: 1
                pack_variation:
                  type: integer
                  description: 'The variation of the pack associated with the ad.'
                  example: 1
                programmed_for:
                  type: date
                  description: 'The date when the ad is programmed for.'
                  example: '2023-06-25'
              required:
                - pack_id
                - pack_variation
                - programmed_for
  '/api/ads/{id}':
    get:
      summary: 'Display the specified ad.'
      operationId: displayTheSpecifiedAd
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
    put:
      summary: 'Update the specified ad in the database.'
      operationId: updateTheSpecifiedAdInTheDatabase
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text_content:
                  type: string
                  description: 'required_without:audio_content The text content of the ad.'
                  example: '"Updated sample text ad."'
                audio_content:
                  type: string
                  description: 'required_without:text_content The audio content of the ad.'
                  example: qui
                pack_id:
                  type: integer
                  description: 'The ID of the pack associated with the ad.'
                  example: 1
                pack_variation:
                  type: integer
                  description: 'The variation of the pack associated with the ad.'
                  example: 1
                programmed_for:
                  type: date
                  description: 'The date when the ad is programmed for.'
                  example: '2023-06-26'
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ad.'
        example: vitae
        required: true
        schema:
          type: string
  /api/payments:
    get:
      summary: "Display a listing of the user's payments."
      operationId: displayAListingOfTheUsersPayments
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
    post:
      summary: 'Store a newly created payment.'
      operationId: storeANewlyCreatedPayment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ad_id:
                  type: integer
                  description: 'The ID of the ad associated with the payment.'
                  example: 1
                payment_method:
                  type: string
                  description: 'The method of the payment. Can be one of: cc (credit card), transfer, wire.'
                  example: '"cc"'
                status:
                  type: string
                  description: 'The status of the payment. Can be one of: pending, paid, failed.'
                  example: '"pending"'
              required:
                - ad_id
                - payment_method
                - status
  '/api/payments/{id}':
    get:
      summary: 'Display the specified payment.'
      operationId: displayTheSpecifiedPayment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
    put:
      summary: 'Update the specified payment.'
      operationId: updateTheSpecifiedPayment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: string
                  description: 'The method of the payment. Can be one of: cc (credit card), transfer, wire.'
                  example: '"cc"'
                status:
                  type: string
                  description: 'The status of the payment. Can be one of: pending, paid, failed.'
                  example: '"pending"'
              required:
                - payment_method
                - status
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ad.'
        example: 1
        required: true
        schema:
          type: integer
  /api/logout:
    post:
      summary: 'Log out the current authenticated user.'
      operationId: logOutTheCurrentAuthenticatedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
  /api/packs:
    get:
      summary: 'Show all packs'
      operationId: showAllPacks
      description: "This function retrieves all packs in the database and returns them as a resource collection.\nEach pack is transformed into a JSON object by the PackResource."
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
  '/api/packs/{id}':
    get:
      summary: 'Show a specific pack'
      operationId: showASpecificPack
      description: "This function retrieves a specific pack from the database using its ID and returns it as a JSON object\nThe pack is transformed by the PackResource."
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pack.'
        example: 1
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: 'User registration'
      operationId: userRegistration
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'The name of the user.'
                  example: 'John Doe'
                email:
                  type: string
                  description: 'The email of the user. Must be a valid email address.'
                  example: john@example.com
                phone_number:
                  type: string
                  description: "The phone number of the user. Must follow the pattern '^0[67][0-9]{8}$'."
                  example: '0612345678'
                password:
                  type: string
                  description: 'The password of the user. Must be at least 8 characters, contain at least one uppercase letter, one lowercase letter, one number, and one special character from @$!%*#?&.'
                  example: Password@123
                firm:
                  type: string
                  description: 'The firm of the user.'
                  example: 'My Firm'
                domain:
                  type: string
                  description: 'The domain of the user.'
                  example: mydomain.com
              required:
                - name
                - email
                - phone_number
                - password
                - firm
                - domain
      security: []
  /api/login:
    post:
      summary: 'User login'
      operationId: userLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  description: "The phone number of the user. Must follow the pattern '^0[67][0-9]{8}$'."
                  example: '0612345678'
                password:
                  type: string
                  description: 'The password of the user. Must be at least 8 characters, contain at least one uppercase letter, one lowercase letter, one number, and one special character from @$!%*#?&.'
                  example: Password@123
              required:
                - phone_number
                - password
      security: []
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
