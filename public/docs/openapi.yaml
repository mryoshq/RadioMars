openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/advertiser:
    get:
      summary: ''
      operationId: getApiAdvertiser
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdvertiser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/ads:
    get:
      summary: ''
      operationId: getApiAds
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAds
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text_content:
                  type: string
                  description: 'This field is required when <code>audio_content</code> is not present.'
                  example: et
                audio_content:
                  type: string
                  description: 'This field is required when <code>text_content</code> is not present.'
                  example: fuga
                pack_id:
                  type: string
                  description: ''
                  example: amet
                pack_variation:
                  type: string
                  description: ''
                  example: consequuntur
              required:
                - pack_id
                - pack_variation
      security: []
  '/api/ads/{id}':
    get:
      summary: ''
      operationId: getApiAdsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiAdsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text_content:
                  type: string
                  description: 'This field is required when <code>audio_content</code> is not present.'
                  example: dignissimos
                audio_content:
                  type: string
                  description: 'This field is required when <code>text_content</code> is not present.'
                  example: molestiae
                pack_id:
                  type: string
                  description: ''
                  example: eaque
                pack_variation:
                  type: string
                  description: ''
                  example: harum
              required:
                - pack_id
                - pack_variation
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the ad.'
        example: quasi
        required: true
        schema:
          type: string
  /api/payments:
    get:
      summary: ''
      operationId: getApiPayments
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiPayments
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ad_id:
                  type: string
                  description: ''
                  example: debitis
                payment_method:
                  type: string
                  description: 'Must be one of <code>cc</code>, <code>transfer</code>, or <code>wire</code>.'
                  example: cc
                status:
                  type: string
                  description: 'Must be one of <code>pending</code>, <code>paid</code>, or <code>failed</code>.'
                  example: failed
              required:
                - ad_id
                - payment_method
                - status
      security: []
  '/api/payments/{id}':
    get:
      summary: ''
      operationId: getApiPaymentsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiPaymentsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: string
                  description: 'Must be one of <code>cc</code>, <code>transfer</code>, or <code>wire</code>.'
                  example: transfer
                status:
                  type: string
                  description: 'Must be one of <code>pending</code>, <code>paid</code>, or <code>failed</code>.'
                  example: paid
              required:
                - payment_method
                - status
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the payment.'
        example: est
        required: true
        schema:
          type: string
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/packs:
    get:
      summary: ''
      operationId: getApiPacks
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
  '/api/packs/{id}':
    get:
      summary: ''
      operationId: getApiPacksId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'Not Found!'
                properties:
                  error:
                    type: string
                    example: 'Not Found!'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the pack.'
        example: 1
        required: true
        schema:
          type: integer
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  description: 'Must not be greater than 20 characters.'
                  example: xascuelcwkyiihwb
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '+UP+EgsbI&.U+w^'
              required:
                - phone_number
                - password
      security: []
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
